name: "Setup branch and parser for Issue Request"

inputs:
  issueNumber:
    required: true
    type: number
  token:
    required: true
    type: string

outputs:
  MODELPATH:
    description: "The path to the file to update"
    value: ${{ steps.get_path.outputs.path }}
  DOCKER:
    description: "The docker url to update"
    value: ${{ steps.get_docker_url.outputs.docker_url }}
  PYTHONS:
    value: ${{ issue-parser.outputs.issueparser_python-scripts }}
  BRANCHNAME:
    value: ${{ steps.Create_Issue_Branch.outputs.branchName }}
runs:
  using: "composite"

  steps:

      # This will automatically create a new branch from this issue, using custom config at /.github/issue-branch.yml 🟢 ♻️
    - name: Create Issue Branch
      id: Create_Issue_Branch
      uses: robvanderleek/create-issue-branch@main
      env:
        GITHUB_TOKEN:
          ${{ inputs.token }}

    # Checkout the repository to the GitHub Actions runner
    # This is when the action fails and the user wants to update the issue scripts
    # This will ref the issue branch and allow for the rest of the script to update
    # the branch. 🟢 ♻️
    - uses: actions/checkout@v3
      if: steps.Create_Issue_Branch.outputs.branchName == ''
      with:
        ref: issue-${{ inputs.issueNumber }}

    # If branchName is empty use issue number, else, use the branchName 🟢 ♻️
    - uses: actions/checkout@v3
      if: steps.Create_Issue_Branch.outputs.branchName != ''
      with:
          ref: ${{ steps.Create_Issue_Branch.outputs.branchName }}
    
    # Parse the issue template and content 🟢 ♻️
    - uses: stefanbuck/github-issue-parser@v3
      id: issue-parser
      with:
        template-path: .github/ISSUE_TEMPLATE/updateModel.yml # optional but recommended
  
    - name: Get the Path
      shell: bash
      id: get_path
      run: echo "path=${{ steps.issue-parser.outputs.issueparser_path }}" >> $GITHUB_OUTPUT

    # Get docker url
    - name: Get Docker URL
      shell: bash
      id: get_docker_url
      run: echo "docker_url=${{ steps.issue-parser.outputs.issueparser_docker }}" >> $GITHUB_OUTPUT

    - name: Install svn
      shell: bash
      run: sudo apt-get install subversion