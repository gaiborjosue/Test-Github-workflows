name: Guide Notebooks Regression - EC2
run-name: ${{ github.ref_name }} - Guide Notebooks Regression - EC2
on: [push]
jobs:
  start-runner:
    name: Start self-hosted EC2 runner
    runs-on: ubuntu-latest
    outputs:
      label: ${{ steps.start-ec2-runner.outputs.label }}
      ec2-instance-id: ${{ steps.start-ec2-runner.outputs.ec2-instance-id }}
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_KEY_SECRET }}
          aws-region: ${{ vars.AWS_REGION }}
      - name: Start EC2 runner
        id: start-ec2-runner
        uses: machulav/ec2-github-runner@v2
        with:
          mode: start
          github-token: ${{ secrets.GH_TOKEN }}
          ec2-image-id: ${{ vars.AWS_IMAGE_ID }}
          ec2-instance-type: ${{ vars.AWS_INSTANCE_TYPE }}
          subnet-id: ${{ vars.AWS_SUBNET }}
          security-group-id: ${{ vars.AWS_SECURITY_GROUP }}

          

  do-the-job:
    name: Do the job on the runner
    needs: start-runner # required to start the main job when the runner is ready
    runs-on: ${{ needs.start-runner.outputs.label }} # run the job on the newly created runner
    steps:

      - name: Cleanup disk space for large docker images
        run: |
            sudo rm -rf /usr/share/dotnet
            sudo rm -rf /opt/ghc
            sudo rm -rf "/usr/local/share/boost"
            sudo rm -rf /opt/hostedtoolcache
            sudo rm -rf "$AGENT_TOOLSDIRECTORY"

      - name: Free Disk Space (Ubuntu)
        uses: jlumbroso/free-disk-space@main
        with:
          # this might remove tools that are actually needed,
          # if set to "true" but frees about 6 GB
          tool-cache: false
          
          # all of these default to true, but feel free to set to
          # "false" if necessary for your workflow
          android: true
          dotnet: true
          haskell: true
          large-packages: true
          docker-images: false

      - uses: actions/checkout@v3

      #- name: Install singularity
        #run: |

          #sudo apt-get update && \
          #sudo apt-get install -y build-essential \
          #libseccomp-dev pkg-config squashfs-tools cryptsetup make

          #wget https://github.com/sylabs/singularity/releases/download/v4.0.0/singularity-ce_4.0.0-focal_amd64.deb


          #sudo apt install ./singularity-ce_4.0.0-focal_amd64.deb -y
          #singularity version

      #- name: Convert docker image to singularity image
        #run: |
          #singularity pull testing.sif docker://edwardjosue2005/deepcsr

      #- name: Run singularity image
        #run: |
          #git clone https://github.com/gaiborjosue/DeepCSR-testing.git

          #sudo apt install python3-pip -y

          #pip3 install gdown

          #pip install --upgrade gdown

          #gdown https://drive.google.com/uc?id=10P5XnHbJLQgo5nkbheT6iES9P-JeFPIq&confirm=t
          
          #ls
          
          #singularity exec --nv --bind /actions-runner,/actions-runner/_work/,/actions-runner/_work/Test-Github-workflows/Test-Github-workflows/DeepCSR-testing:/output testing.sif python /output/predict.py --conf_path /output/predict.yaml --model_checkpoint best_model.pth --dataset /output/test.nii.gz --output_dir /output

      - name: Collect Workflow Telemetry
        uses: runforesight/workflow-telemetry-action@v1
        with:
          job_summary: true
          proc_trace_sys_enable: true
          proc_trace_table_show: true

      - name: Run docker image with testing commands
        run: |
          git clone https://github.com/gaiborjosue/DeepCSR-testing.git

          sudo apt install python3-pip -y

          pip3 install gdown

          pip install --upgrade gdown

          gdown "https://drive.google.com/uc?id=10P5XnHbJLQgo5nkbheT6iES9P-JeFPIq&confirm=t"
          
          mv best_model.pth DeepCSR-testing

          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}

          docker build -t deepcsr ./DeepCSR-testing/docker

          docker images

          docker run -v ./DeepCSR-testing:/output deepcsr "cd /output; python predict.py --conf_path predict.yaml --model_checkpoint best_model.pth --dataset test.nii.gz --output_dir ."


  stop-runner:
    name: Stop self-hosted EC2 runner
    needs:
      - start-runner # required to get output from the start-runner job
      - do-the-job # required to wait when the main job is done
    runs-on: ubuntu-latest
    if: ${{ always() }} # required to stop the runner even if the error happened in the previous jobs
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_KEY_SECRET }}
          aws-region: ${{ vars.AWS_REGION }}
      - name: Stop EC2 runner
        uses: machulav/ec2-github-runner@v2
        with:
          mode: stop
          github-token: ${{ secrets.GH_TOKEN }}
          label: ${{ needs.start-runner.outputs.label }}
          ec2-instance-id: ${{ needs.start-runner.outputs.ec2-instance-id }}
